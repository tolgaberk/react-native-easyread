{"version":3,"sources":["js/Classes/Types.js","js/Classes/Message.js","js/MessageListener.js","js/WindowEvents.js","js/Classes/Bookmark.js","js/Classes/Paragraph.js","js/Classes/Selection.js","js/helpers/Marker.js","js/app.js","index.js"],"names":["types","ON_LOAD","ON_LOAD_END","ON_CLOSE","CONFIRMATION","NOOP","ERROR","GO_TO_PAGE","GO_TO_PARAGRAPH","ON_GO_TO_PAGE","ON_GO_TO_PARAGRAPH","CREATE_BOOKMARK","ON_CREATE_BOOKMARK","DELETE_BOOKMARK","ON_DELETE_BOOKMARK","UPDATE_BOOKMARK","ON_UPDATE_BOOKMARK","ON_BOOKMARK_SELECTED","ALREADY_BOOKMARKED","CREATE_HIGHLIGHT","ON_CREATE_HIGHLIGHT","DELETE_HIGHLIGHT","ON_DELETE_HIGHLIGHT","UPDATE_HIGHLIGHT","ON_UPDATE_HIGHLIGHT","ON_HIGHLIGHT_SELECTED","ALREADY_HIGHLIGHTED","CHANGE_BACKGROUND_COLOR","CHANGE_FONTWEIGHT","CHANGE_FONTWEIGHT_OF_SELECTED","CHANGE_TEXT_DECORATION_OF_SELECTED","CHANGE_FONT_SIZE","CHANGE_LINEHEIGHT","CHANGE_PADDING","CHANGE_FONTCOLOR","CHANGE_FONT_FAMILY","CHANGE_TEXT_ALIGNMENT","CHANGE_TEXT_DIRECTION","COLORIZE_SENTENCES","CHANGE_PAGE_FORWARD","ON_CHANGE_PAGE_FORWARD","CHANGE_PAGE_BACKWARD","ON_CHANGE_PAGE_BACKWARD","TOGGLE_AUTO_SCROLL","ON_SCROLL_CHANGE","ON_MOUSE_UP","ON_MOUSE_DOWN","ON_POINTER_DOWN","ON_POINTER_MOVE","ON_POINTER_CANCEL","ON_SELECTION","ON_SELECTION_CHANGE","ON_ORIENTATION_CHANGE","Message","message","type","MessageTypes","data","Error","JSON","stringify","window","sendConfirmation","console","log","ReactNativeWebView","postMessage","MessageListener","handler","time","Date","now","listener","id","remove","Listeners","MessageListeners","filter","item","push","Object","keys","ReactNativeMessage","send","emitMessage","WindowController","func","onload","onscroll","str","addEventListener","onReactNativeMessage","DocumentController","document","module","exports","Bookmark","paragraphId","paragraph","paragraphPosition","querySelector","getBoundingClientRect","bookmarkImage","createElement","src","Image","bookmarkWrapper","appendChild","style","position","top","right","getElementById","Bookmarks","Paragraph","bookId","pageNo","contentHtml","contentMarkDown","languageId","bookmarked","highlightInfo","Paragraphs","htmlElement","className","setAttribute","toString","innerHTML","selector","DocSelection","selection","getSelection","text","range","getRangeAt","currentSelection","collapseToEnd","wrapRangeText","getTextNodes","el","node","doc","walker","body","ownerDocument","createTreeWalker","NodeFilter","SHOW_TEXT","textNodes","nextNode","rangesIntersect","rangeA","rangeB","compareBoundaryPoints","Range","END_TO_START","START_TO_END","createRangeFromNode","createRange","selectNode","e","selectNodeContents","rangeIntersectsNode","intersectsNode","isNonEmptyTextNode","textContent","length","getRangeTextNodes","container","commonAncestorContainer","nodes","parentNode","removeChild","replaceNode","replacementNode","insertBefore","unwrap","extractContents","undo","forEach","parent","normalize","createWrapperFunction","wrapperEl","startNode","startContainer","endNode","endContainer","startOffset","endOffset","currentRange","currentWrapper","cloneNode","nodeType","setStart","setEnd","surroundContents","wrapperObj","isCollapsed","wrapNode","map","Controllers","setOn","Types","on","paragraphs","paragraphObj","appendToRoot","prepForReactNative"],"mappings":"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","file":"public.96e9c8e6.js","sourceRoot":"..","sourcesContent":["const types = {\n  // WINDOW EVENTS\n  ON_LOAD: 'ON_LOAD',\n  ON_LOAD_END: 'ON_LOAD_END',\n  ON_CLOSE: 'ON_CLOSE',\n  CONFIRMATION: 'CONFIRMATION',\n  NOOP: 'NOOP',\n  ERROR: 'ERROR',\n\n  GO_TO_PAGE: 'GO_TO_PAGE',\n  GO_TO_PARAGRAPH: 'GO_TO_PARAGRAPH',\n\n  ON_GO_TO_PAGE: 'ON_GO_TO_PAGE',\n  ON_GO_TO_PARAGRAPH: 'ON_GO_TO_PARAGRAPH',\n\n  // BOOKMARK EVENTS\n  CREATE_BOOKMARK: 'CREATE_BOOKMARK',\n  ON_CREATE_BOOKMARK: 'ON_CREATE_BOOKMARK',\n\n  DELETE_BOOKMARK: 'DELETE_BOOKMARK',\n  ON_DELETE_BOOKMARK: 'ON_DELETE_BOOKMARK',\n\n  UPDATE_BOOKMARK: 'UPDATE_BOOKMARK',\n  ON_UPDATE_BOOKMARK: 'ON_UPDATE_BOOKMARK',\n\n  ON_BOOKMARK_SELECTED: 'ON_BOOKMARK_SELECTED',\n  ALREADY_BOOKMARKED: 'ALREADY_BOOKMARKED',\n\n  // HIGHLIGHT EVENTS\n  CREATE_HIGHLIGHT: 'CREATE_HIGHLIGHT',\n  ON_CREATE_HIGHLIGHT: 'ON_CREATE_HIGHLIGHT',\n\n  DELETE_HIGHLIGHT: 'DELETE_HIGHLIGHT',\n  ON_DELETE_HIGHLIGHT: 'ON_DELETE_HIGHLIGHT',\n\n  UPDATE_HIGHLIGHT: 'UPDATE_HIGHLIGHT',\n  ON_UPDATE_HIGHLIGHT: 'ON_UPDATE_HIGHLIGHT',\n\n  ON_HIGHLIGHT_SELECTED: 'ON_HIGHLIGHT_SELECTED',\n  ALREADY_HIGHLIGHTED: 'ALREADY_BOOKMARKED',\n\n  // CUSTOMIZATION EVENTS\n  CHANGE_BACKGROUND_COLOR: 'CHANGE_BACKGROUND_COLOR',\n  CHANGE_FONTWEIGHT: 'CHANGE_FONTWEIGHT',\n  CHANGE_FONTWEIGHT_OF_SELECTED: 'CHANGE_FONTWEIGHT_OF_SELECTED',\n  CHANGE_TEXT_DECORATION_OF_SELECTED: 'CHANGE_TEXT_DECORATION_OF_SELECTED',\n  CHANGE_FONT_SIZE: 'CHANGE_FONT_SIZE',\n  CHANGE_LINEHEIGHT: 'CHANGE_LINEHEIGHT',\n  CHANGE_PADDING: 'CHANGE_PADDING',\n  CHANGE_FONTCOLOR: 'CHANGE_FONTCOLOR',\n  CHANGE_FONT_FAMILY: 'CHANGE_FONT_FAMILY',\n  CHANGE_TEXT_ALIGNMENT: 'CHANGE_TEXT_ALIGNMENT',\n  CHANGE_TEXT_DIRECTION: 'CHANGE_TEXT_DIRECTION',\n  COLORIZE_SENTENCES: 'COLORIZE_SENTENCES',\n\n  // PAGE EVENTS\n  CHANGE_PAGE_FORWARD: 'CHANGE_PAGE_FORWARD',\n  ON_CHANGE_PAGE_FORWARD: 'ON_CHANGE_PAGE_FORWARD',\n\n  CHANGE_PAGE_BACKWARD: 'CHANGE_PAGE_BACKWARD',\n  ON_CHANGE_PAGE_BACKWARD: 'ON_CHANGE_PAGE_BACKWARD',\n\n  TOGGLE_AUTO_SCROLL: 'TOGGLE_AUTO_SCROLL',\n  ON_SCROLL_CHANGE: 'ON_SCROLL_CHANGE',\n\n  // POINTER EVENTS\n  ON_MOUSE_UP: 'ON_MOUSE_UP',\n  ON_MOUSE_DOWN: 'ON_MOUSE_DOWN',\n  ON_POINTER_DOWN: 'ON_POINTER_DOWN',\n  ON_POINTER_MOVE: 'ON_POINTER_MOVE',\n  ON_POINTER_CANCEL: 'ON_POINTER_CANCEL',\n\n  ON_SELECTION: 'ON_SELECTION',\n  ON_SELECTION_CHANGE: 'ON_SELECTION_CHANGE',\n\n  ON_ORIENTATION_CHANGE: 'ON_ORIENTATION_CHANGE',\n};\nexport default types;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport MessageTypes from './Types';\n\nclass Message {\n  static addMessageType(type) {\n    MessageTypes[type] = type;\n  }\n\n  constructor(message = { type: MessageTypes.NOOP, data: {} }) {\n    const { type, data } = message;\n    if (MessageTypes[type]) {\n      this.type = type;\n      this.data = data;\n    } else {\n      throw new Error(`TYPE MUST BE ONE OF ${JSON.stringify(MessageTypes)}`);\n    }\n  }\n\n  send(data) {\n    if (data) {\n      this.data = { ...this.data, ...data };\n    }\n    if (window.sendConfirmation) {\n      console.log(this);\n    }\n    window.ReactNativeWebView.postMessage(JSON.stringify(this));\n  }\n}\n\nexport default Message;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport MessageTypes from './Classes/Types';\nimport Message from './Classes/Message';\n\nclass MessageListener {\n  static MessageListeners = [];\n\n  static on(type = 'NOOP', handler = () => {}) {\n    if (MessageTypes[type]) {\n      const time = Date.now();\n      const listener = {\n        type,\n        handler,\n        id: time,\n        remove: () => {\n          const Listeners = MessageListener.MessageListeners;\n          MessageListener.MessageListeners = Listeners.filter(\n            (item) => item.id !== time,\n          );\n        },\n      };\n      MessageListener.MessageListeners.push(listener);\n      return listener.remove;\n    }\n    throw new Error(\n      `TYPE MUST BE ONE OF ${JSON.stringify(Object.keys(MessageTypes))}`,\n    );\n  }\n\n  static onReactNativeMessage({ data: ReactNativeMessage }) {\n    const message = new Message(ReactNativeMessage);\n    if (window.sendConfirmation) {\n      new Message({ type: MessageTypes.CONFIRMATION, data: message }).send();\n    }\n    MessageListener.emitMessage(message);\n  }\n\n  static emitMessage(message) {\n    const { type, data } = message;\n    if (type && MessageTypes[type]) {\n      // eslint-disable-next-line no-restricted-syntax\n      for (const listener of MessageListener.MessageListeners) {\n        if (listener.type === type) {\n          listener.handler(data);\n        }\n      }\n    } else {\n      throw new Error(\n        `${type} TYPE MUST BE ONE OF ${JSON.stringify(\n          Object.keys(MessageTypes),\n        )}`,\n      );\n    }\n  }\n}\nexport default MessageListener;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport MessageListener from './MessageListener';\n\nclass WindowController {\n  static setOnLoad(func) {\n    window.onload = func;\n  }\n\n  static setOnScroll(func) {\n    window.onscroll = func;\n  }\n\n  static setOn(str, func) {\n    window[str] = func;\n  }\n}\n\nwindow.addEventListener('message', MessageListener.onReactNativeMessage);\n\nclass DocumentController {\n  static setOnLoad(func) {\n    document.onload = func;\n  }\n\n  static setOnScroll(func) {\n    document.onscroll = func;\n  }\n\n  static setOn(str, func) {\n    document[str] = func;\n  }\n}\nmodule.exports = { DocumentController, WindowController };\n","/* eslint-disable no-restricted-syntax */\n/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nclass Bookmark {\n  static Bookmarks = [];\n\n  static Image =\n    'https://www.vhv.rs/dpng/d/156-1563643_transparent-bookmark-icon-png-bookmark-icon-black-png.png';\n\n  constructor(paragraphId) {\n    this.paragraph = paragraphId;\n  }\n\n  createBookmark() {\n    const paragraph = document.querySelector(`[pid=\"${this.paragraph}\"]`);\n    const paragraphPosition = paragraph.getBoundingClientRect();\n    const bookmarkImage = document.createElement('img');\n    bookmarkImage.src = Bookmark.Image;\n    this.bookmarkWrapper = document.createElement('div');\n    this.bookmarkWrapper.appendChild(bookmarkImage);\n    this.bookmarkWrapper.style.position = 'absolute';\n    this.bookmarkWrapper.style.top = paragraphPosition.top;\n    this.bookmarkWrapper.style.right = paragraphPosition.right;\n    document.getElementById('root').appendChild(this.bookmarkWrapper);\n    Bookmark.Bookmarks.push(this.bookmarkWrapper);\n  }\n\n  remove() {\n    this.bookmarkWrapper.remove();\n  }\n\n  static repositionBookmarks() {\n    for (const bookmark of Bookmark.Bookmarks) {\n      bookmark.remove();\n    }\n  }\n}\n\nexport default Bookmark;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport Bookmark from './Bookmark';\n\nclass Paragraph {\n  static Paragraphs = {};\n\n  constructor({\n    paragraphId,\n    bookId,\n    pageNo,\n    contentMarkDown: contentHtml,\n    languageId,\n  }) {\n    this.paragraphId = paragraphId;\n    this.bookId = bookId;\n    this.pageNo = pageNo;\n    this.contentHtml = contentHtml;\n    this.languageId = languageId;\n    this.bookmarked = false;\n    this.highlightInfo = null;\n    Paragraph.Paragraphs[this.paragraphId] = this;\n  }\n\n  createElement() {\n    this.htmlElement = document.createElement('p');\n    this.htmlElement.className = 'paragraph';\n    this.htmlElement.setAttribute('pid', this.paragraphId.toString());\n    this.htmlElement.innerHTML = this.contentHtml;\n    return this.htmlElement;\n  }\n\n  appendToRoot() {\n    document.getElementById('root').appendChild(this.htmlElement);\n  }\n\n  appendToElement(selector = '#root') {\n    document.querySelector(selector).appendChild(this.htmlElement);\n  }\n\n  bookmark() {\n    Bookmark(this.paragraphId);\n    this.bookmarked = true;\n  }\n}\nexport default Paragraph;\n","class DocSelection {\n  static currentSelection;\n\n  constructor(selection = window.getSelection()) {\n    this.selection = selection;\n    this.text = selection.toString();\n    if (text !== '') {\n      this.range = selection.getRangeAt(0);\n    }\n    DocSelection.currentSelection = this;\n  }\n\n  prepForReactNative() {\n    const selection = JSON.stringify(this.selection);\n    const range = JSON.stringify(this.range);\n    return { selection, range, text: this.text };\n  }\n\n  collapse() {\n    this.selection.collapseToEnd();\n  }\n}\n\nexport default DocSelection;\n","/* eslint-disable no-param-reassign */\n// return all text nodes that are contained within `el`\nfunction getTextNodes(el) {\n  el = el || document.body;\n\n  const doc = el.ownerDocument || document;\n  // eslint-disable-next-line no-undef\n  const walker = doc.createTreeWalker(el, NodeFilter.SHOW_TEXT, null, false);\n  const textNodes = [];\n  let node;\n\n  // eslint-disable-next-line no-cond-assign\n  while ((node = walker.nextNode())) {\n    textNodes.push(node);\n  }\n  return textNodes;\n}\n\n// return true if `rangeA` intersects `rangeB`\nfunction rangesIntersect(rangeA, rangeB) {\n  return (\n    // eslint-disable-next-line no-undef\n    rangeA.compareBoundaryPoints(Range.END_TO_START, rangeB) === -1 &&\n    // eslint-disable-next-line no-undef\n    rangeA.compareBoundaryPoints(Range.START_TO_END, rangeB) === 1\n  );\n}\n\n// create and return a range that selects `node`\nfunction createRangeFromNode(node) {\n  const range = node.ownerDocument.createRange();\n  try {\n    range.selectNode(node);\n  } catch (e) {\n    range.selectNodeContents(node);\n  }\n  return range;\n}\n\n// return true if `node` is fully or partially selected by `range`\nfunction rangeIntersectsNode(range, node) {\n  if (range.intersectsNode) {\n    return range.intersectsNode(node);\n  }\n  return rangesIntersect(range, createRangeFromNode(node));\n}\n\n// returns true if `node` has text content\nfunction isNonEmptyTextNode(node) {\n  return node.textContent.length > 0;\n}\n\n// return all non-empty text nodes fully or partially selected by `range`\nfunction getRangeTextNodes(range) {\n  const container = range.commonAncestorContainer;\n  const nodes = getTextNodes(container.parentNode || container);\n\n  return nodes.filter(\n    (node) => rangeIntersectsNode(range, node) && isNonEmptyTextNode(node),\n  );\n}\n\n// remove `el` from the DOM\nfunction remove(el) {\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n}\n\n// replace `node` with `replacementNode`\nfunction replaceNode(replacementNode, node) {\n  remove(replacementNode);\n  node.parentNode.insertBefore(replacementNode, node);\n  remove(node);\n}\n\n// unwrap `el` by replacing itself with its contents\nfunction unwrap(el) {\n  const range = document.createRange();\n  range.selectNodeContents(el);\n  replaceNode(range.extractContents(), el);\n}\n\n// undo the effect of `wrapRangeText`, given a resulting array of wrapper `nodes`\nfunction undo(nodes) {\n  nodes.forEach((node) => {\n    const parent = node.parentNode;\n    unwrap(node);\n    parent.normalize();\n  });\n}\n\n// create a node wrapper function\nfunction createWrapperFunction(wrapperEl, range) {\n  let startNode = range.startContainer;\n  let endNode = range.endContainer;\n  let { startOffset } = range;\n  let { endOffset } = range;\n\n  return function wrapNode(node) {\n    const currentRange = document.createRange();\n    const currentWrapper = wrapperEl.cloneNode();\n\n    currentRange.selectNodeContents(node);\n\n    if (node === startNode && startNode.nodeType === 3) {\n      currentRange.setStart(node, startOffset);\n      startNode = currentWrapper;\n      startOffset = 0;\n    }\n    if (node === endNode && endNode.nodeType === 3) {\n      currentRange.setEnd(node, endOffset);\n      endNode = currentWrapper;\n      endOffset = 1;\n    }\n\n    currentRange.surroundContents(currentWrapper);\n    return currentWrapper;\n  };\n}\n\n// eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\nfunction wrapRangeText(wrapperEl, range) {\n  let nodes;\n\n  const wrapperObj = {};\n\n  if (typeof range === 'undefined') {\n    // get the current selection if no range is specified\n    range = window.getSelection().getRangeAt(0);\n  }\n\n  if (range.isCollapsed) {\n    // nothing to wrap\n    return [];\n  }\n\n  if (typeof wrapperEl === 'undefined') {\n    wrapperEl = 'span';\n  }\n\n  if (typeof wrapperEl === 'string') {\n    // assume it's a tagname\n    wrapperEl = document.createElement(wrapperEl);\n  }\n\n  const wrapNode = createWrapperFunction(wrapperEl, range);\n\n  nodes = getRangeTextNodes(range);\n  nodes = nodes.map(wrapNode);\n\n  wrapperObj.nodes = nodes;\n  wrapperObj.unwrap = () => {\n    if (this.nodes.length) {\n      undo(this.nodes);\n      this.nodes = [];\n    }\n  };\n\n  return wrapperObj;\n}\n\nexport default wrapRangeText;\n","/* eslint-disable no-restricted-syntax */\nimport Controllers from './WindowEvents';\nimport MessageListener from './MessageListener';\nimport Types from './Classes/Types';\nimport Message from './Classes/Message';\nimport Paragraph from './Classes/Paragraph';\nimport DocSelection from './Classes/Selection';\nimport './helpers/Marker';\n\nControllers.WindowController.setOn('onload', () => {\n  new Message({ type: Types.ON_LOAD }).send();\n\n  MessageListener.on(Types.ON_LOAD, (paragraphs) => {\n    for (const paragraph of paragraphs) {\n      const paragraphObj = new Paragraph(paragraph);\n      console.log(paragraphObj);\n      paragraphObj.createElement();\n      paragraphObj.appendToRoot();\n    }\n  });\n});\n\nControllers.DocumentController.setOn('onselectionchange', (e) => {\n  console.log(e);\n  const selection = new DocSelection();\n  new Message({\n    type: Types.ON_SELECTION_CHANGE,\n    data: selection.prepForReactNative(),\n  }).send();\n});\n","import './js/app';\n"]}