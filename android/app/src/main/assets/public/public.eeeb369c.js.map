{"version":3,"sources":["js/Types.js","js/Message.js","js/MessageListener.js","js/WindowEvents.js","index.js"],"names":["types","ON_LOAD","ON_LOAD_END","ON_CLOSE","CONFIRMATION","NOOP","ERROR","GO_TO_PAGE","GO_TO_PARAGRAPH","ON_GO_TO_PAGE","ON_GO_TO_PARAGRAPH","CREATE_BOOKMARK","ON_CREATE_BOOKMARK","DELETE_BOOKMARK","ON_DELETE_BOOKMARK","UPDATE_BOOKMARK","ON_UPDATE_BOOKMARK","ON_BOOKMARK_SELECTED","ALREADY_BOOKMARKED","CREATE_HIGHLIGHT","ON_CREATE_HIGHLIGHT","DELETE_HIGHLIGHT","ON_DELETE_HIGHLIGHT","UPDATE_HIGHLIGHT","ON_UPDATE_HIGHLIGHT","ON_HIGHLIGHT_SELECTED","ALREADY_HIGHLIGHTED","CHANGE_BACKGROUND_COLOR","CHANGE_FONTWEIGHT","CHANGE_FONTWEIGHT_OF_SELECTED","CHANGE_TEXT_DECORATION_OF_SELECTED","CHANGE_FONT_SIZE","CHANGE_LINEHEIGHT","CHANGE_PADDING","CHANGE_FONTCOLOR","CHANGE_FONT_FAMILY","CHANGE_TEXT_ALIGNMENT","CHANGE_TEXT_DIRECTION","COLORIZE_SENTENCES","CHANGE_PAGE_FORWARD","ON_CHANGE_PAGE_FORWARD","CHANGE_PAGE_BACKWARD","ON_CHANGE_PAGE_BACKWARD","TOGGLE_AUTO_SCROLL","ON_SCROLL_CHANGE","ON_MOUSE_UP","ON_MOUSE_DOWN","ON_POINTER_DOWN","ON_POINTER_MOVE","ON_POINTER_CANCEL","ON_SELECTION","ON_SELECTION_CHANGE","ON_ORIENTATION_CHANGE","Message","message","type","MessageTypes","data","Error","JSON","stringify","window","sendConfirmation","console","log","ReactNativeWebView","postMessage","MessageListener","handler","time","Date","now","listener","id","remove","Listeners","MessageListeners","filter","item","push","Object","keys","ReactNativeMessage","send","emitMessage","WindowController","func","onload","onscroll","str","addEventListener","onReactNativeMessage","DocumentController","document","module","exports","setOnLoad","querySelector","innerHTML","Types","on","alert"],"mappings":"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","file":"public.eeeb369c.js","sourceRoot":"..","sourcesContent":["const types = {\n  // WINDOW EVENTS\n  ON_LOAD: 'ON_LOAD',\n  ON_LOAD_END: 'ON_LOAD_END',\n  ON_CLOSE: 'ON_CLOSE',\n  CONFIRMATION: 'CONFIRMATION',\n  NOOP: 'NOOP',\n  ERROR: 'ERROR',\n\n  GO_TO_PAGE: 'GO_TO_PAGE',\n  GO_TO_PARAGRAPH: 'GO_TO_PARAGRAPH',\n\n  ON_GO_TO_PAGE: 'ON_GO_TO_PAGE',\n  ON_GO_TO_PARAGRAPH: 'ON_GO_TO_PARAGRAPH',\n\n  // BOOKMARK EVENTS\n  CREATE_BOOKMARK: 'CREATE_BOOKMARK',\n  ON_CREATE_BOOKMARK: 'ON_CREATE_BOOKMARK',\n\n  DELETE_BOOKMARK: 'DELETE_BOOKMARK',\n  ON_DELETE_BOOKMARK: 'ON_DELETE_BOOKMARK',\n\n  UPDATE_BOOKMARK: 'UPDATE_BOOKMARK',\n  ON_UPDATE_BOOKMARK: 'ON_UPDATE_BOOKMARK',\n\n  ON_BOOKMARK_SELECTED: 'ON_BOOKMARK_SELECTED',\n  ALREADY_BOOKMARKED: 'ALREADY_BOOKMARKED',\n\n  // HIGHLIGHT EVENTS\n  CREATE_HIGHLIGHT: 'CREATE_HIGHLIGHT',\n  ON_CREATE_HIGHLIGHT: 'ON_CREATE_HIGHLIGHT',\n\n  DELETE_HIGHLIGHT: 'DELETE_HIGHLIGHT',\n  ON_DELETE_HIGHLIGHT: 'ON_DELETE_HIGHLIGHT',\n\n  UPDATE_HIGHLIGHT: 'UPDATE_HIGHLIGHT',\n  ON_UPDATE_HIGHLIGHT: 'ON_UPDATE_HIGHLIGHT',\n\n  ON_HIGHLIGHT_SELECTED: 'ON_HIGHLIGHT_SELECTED',\n  ALREADY_HIGHLIGHTED: 'ALREADY_BOOKMARKED',\n\n  // CUSTOMIZATION EVENTS\n  CHANGE_BACKGROUND_COLOR: 'CHANGE_BACKGROUND_COLOR',\n  CHANGE_FONTWEIGHT: 'CHANGE_FONTWEIGHT',\n  CHANGE_FONTWEIGHT_OF_SELECTED: 'CHANGE_FONTWEIGHT_OF_SELECTED',\n  CHANGE_TEXT_DECORATION_OF_SELECTED: 'CHANGE_TEXT_DECORATION_OF_SELECTED',\n  CHANGE_FONT_SIZE: 'CHANGE_FONT_SIZE',\n  CHANGE_LINEHEIGHT: 'CHANGE_LINEHEIGHT',\n  CHANGE_PADDING: 'CHANGE_PADDING',\n  CHANGE_FONTCOLOR: 'CHANGE_FONTCOLOR',\n  CHANGE_FONT_FAMILY: 'CHANGE_FONT_FAMILY',\n  CHANGE_TEXT_ALIGNMENT: 'CHANGE_TEXT_ALIGNMENT',\n  CHANGE_TEXT_DIRECTION: 'CHANGE_TEXT_DIRECTION',\n  COLORIZE_SENTENCES: 'COLORIZE_SENTENCES',\n\n  // PAGE EVENTS\n  CHANGE_PAGE_FORWARD: 'CHANGE_PAGE_FORWARD',\n  ON_CHANGE_PAGE_FORWARD: 'ON_CHANGE_PAGE_FORWARD',\n\n  CHANGE_PAGE_BACKWARD: 'CHANGE_PAGE_BACKWARD',\n  ON_CHANGE_PAGE_BACKWARD: 'ON_CHANGE_PAGE_BACKWARD',\n\n  TOGGLE_AUTO_SCROLL: 'TOGGLE_AUTO_SCROLL',\n  ON_SCROLL_CHANGE: 'ON_SCROLL_CHANGE',\n\n  // POINTER EVENTS\n  ON_MOUSE_UP: 'ON_MOUSE_UP',\n  ON_MOUSE_DOWN: 'ON_MOUSE_DOWN',\n  ON_POINTER_DOWN: 'ON_POINTER_DOWN',\n  ON_POINTER_MOVE: 'ON_POINTER_MOVE',\n  ON_POINTER_CANCEL: 'ON_POINTER_CANCEL',\n\n  ON_SELECTION: 'ON_SELECTION',\n  ON_SELECTION_CHANGE: 'ON_SELECTION_CHANGE',\n\n  ON_ORIENTATION_CHANGE: 'ON_ORIENTATION_CHANGE',\n};\nexport default types;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport MessageTypes from './Types';\n\nclass Message {\n  static addMessageType(type) {\n    MessageTypes[type] = type;\n  }\n\n  constructor(message = { type: MessageTypes.NOOP, data: {} }) {\n    const { type, data } = message;\n    if (MessageTypes[type]) {\n      this.type = type;\n      this.data = data;\n    } else {\n      throw new Error(`TYPE MUST BE ONE OF ${JSON.stringify(MessageTypes)}`);\n    }\n  }\n\n  send() {\n    if (window.sendConfirmation) {\n      console.log(this);\n    }\n    window.ReactNativeWebView.postMessage(JSON.stringify(this));\n  }\n}\n\nexport default Message;\n","/* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport MessageTypes from './Types';\nimport Message from './Message';\n\nclass MessageListener {\n  static MessageListeners = [];\n\n  static on(type = 'NOOP', handler = () => {}) {\n    if (MessageTypes[type]) {\n      const time = Date.now();\n      const listener = {\n        type,\n        handler,\n        id: time,\n        remove: () => {\n          const Listeners = MessageListener.MessageListeners;\n          MessageListener.MessageListeners = Listeners.filter(\n            (item) => item.id !== time,\n          );\n        },\n      };\n      MessageListener.MessageListeners.push(listener);\n      return listener.remove;\n    }\n    throw new Error(\n      `TYPE MUST BE ONE OF ${JSON.stringify(Object.keys(MessageTypes))}`,\n    );\n  }\n\n  static onReactNativeMessage({ data: ReactNativeMessage }) {\n    const message = new Message(ReactNativeMessage);\n    if (window.sendConfirmation) {\n      new Message({ type: MessageTypes.CONFIRMATION, data: message }).send();\n    }\n    MessageListener.emitMessage(message);\n  }\n\n  static emitMessage(message) {\n    const { type, data } = message;\n    if (type && MessageTypes[type]) {\n      // eslint-disable-next-line no-restricted-syntax\n      for (const listener of MessageListener.MessageListeners) {\n        if (listener.type === type) {\n          listener.handler(data);\n        }\n      }\n    } else {\n      throw new Error(\n        `${type} TYPE MUST BE ONE OF ${JSON.stringify(\n          Object.keys(MessageTypes),\n        )}`,\n      );\n    }\n  }\n}\nexport default MessageListener;\n","import MessageListener from './MessageListener';\n\nclass WindowController {\n  static setOnLoad(func) {\n    window.onload = func;\n  }\n\n  static setOnScroll(func) {\n    window.onscroll = func;\n  }\n\n  static setOn(str, func) {\n    window[str] = func;\n  }\n}\n\nwindow.addEventListener('message', MessageListener.onReactNativeMessage);\n\nclass DocumentController {\n  static setOnLoad(func) {\n    document.onload = func;\n  }\n\n  static setOnScroll(func) {\n    document.onscroll = func;\n  }\n\n  static setOn(str, func) {\n    document[str] = func;\n  }\n}\n\nmodule.exports = { WindowController, DocumentController };\n","import { DocumentController, WindowController } from './js/WindowEvents';\nimport MessageListener from './js/MessageListener';\nimport Types from './js/Types';\nimport Message from './js/Message';\n\nWindowController.setOnLoad(() => {\n  document.querySelector('#root').innerHTML = 'NBR';\n  new Message({ type: Types.ON_LOAD }).send();\n  MessageListener.on(Types.NOOP, () => {\n    alert('mesaj alindi');\n  });\n});\n"]}